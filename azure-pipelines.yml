# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# see https://github.com/microsoft/azure-pipelines-yaml
trigger:
- master

strategy:
  matrix:
    # tests
    linuxTest:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
      tox.env: py37
    macTest:
      imageName: 'macOS-latest'
      python.version: '3.7'
      tox.env: py37
    windowsTest:
      imageName: 'windows-latest'
      python.version: '3.7'
      tox.env: py37

    # manifest
    manifestTest:
      python.version: '3.7'
      tox.env: manifest
      imageName: 'ubuntu-latest'

    # package
    linuxPackage:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
      tox.env: package
    macPackage:
      imageName: 'macOS-latest'
      python.version: '3.7'
      tox.env: package
    windowsPackage:
      imageName: 'windows-latest'
      python.version: '3.7'
      tox.env: package

pool:
  vmImage: $(imageName)


steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements/dev.txt
  displayName: 'Install dev dependencies'

- script: |
    tox -e $(tox.env)
  displayName: 'test `tox -e $(tox.env)`'

- publish: $(System.DefaultWorkingDirectory)/dist/image-to-scan.pex
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Agent.JobName'], 'windowsPackage'))
  artifact: PexApp
